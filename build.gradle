plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.myrealstore'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//spring boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	//database driver
	runtimeOnly 'com.mysql:mysql-connector-j'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslGeneratedDir = project.layout.buildDirectory.dir("generated/querydsl")

sourceSets {
	main {
		java {
			srcDirs += [querydslGeneratedDir.get().asFile]
		}
	}
}


tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(querydslGeneratedDir)
	options.compilerArgs
}

clean {
	delete querydslGeneratedDir.get().asFile
}
